% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_pmbb_phewas_report.R
\name{run_pmbb_phewas_report}
\alias{run_pmbb_phewas_report}
\title{Run a PheWAS and generate a report in a single step}
\usage{
run_pmbb_phewas_report(
  gene,
  annotation_file,
  gene_col,
  masks,
  mask_operator,
  variant_id_col,
  effect_allele_col,
  plink_bin,
  bfile,
  phenotypes,
  covariates,
  populations,
  covariate_population_col,
  covariate_cols,
  mask_output = NULL,
  phewas_output = NULL,
  report_output_path = NULL,
  ...
)
}
\arguments{
\item{gene}{The name of the gene to filter variants for.}

\item{annotation_file}{The path to the variant annotation file.}

\item{gene_col}{The name of the column in the annotation file to filter the gene on.}

\item{masks}{A named list of lists containing filter criteria for each mask.
Each element of the outer list should be named after the desired output name for the filtered data frame (eg. name of the variant mask).
Each inner list should contain the filter criteria for a specific set of columns.
For example: list(plof_0.001 = list(ExonicFunc.ensGene = "== 'stopgain'", gnomAD_exome_ALL = "< 0.001"), common_0.01 = list(gnomAD_exome_ALL = "> 0.01"))}

\item{mask_operator}{A named list specifying the operation to perform for each mask. Valid operations are "burden" (default) and "single".
The names in the mask_operator list should correspond to the names in the masks list.
For example: list(plof_0.001 = "burden", common_0.01 = "single")}

\item{variant_id_col}{The name of the column in the annotation file that contains the variant IDs.}

\item{effect_allele_col}{The name of the column in the annotation file that contains the effect alleles.}

\item{plink_bin}{The path to the \code{plink2} binary executable.}

\item{bfile}{The prefix of the plink binary files (without the file extension).}

\item{phenotypes}{Path to PMBB phenotype file or a dataframe containing phenotype data used to run PheWAS}

\item{covariates}{Path to PMBB covariate file(s) or a dataframe containing covariate data used to run PheWAS. If multiple files are provided, they will be joined by \code{PMBB_ID}, and values for duplicated columns will be preserved from the from the file that is specified earlier.}

\item{populations}{A character vector of populations to run PheWAS on. Default is \code{c("ALL")}}

\item{covariate_population_col}{Column containing population labels in the covariate file or dataframe, required if \code{populations} is not \code{ALL}}

\item{covariate_cols}{Vector of columns in the covariate file or dataframe that should be used as covariates in the PheWAS}

\item{mask_output}{Path to the saved genotype output for each mask or an R list object containing the output of \link{pmbb_extract_genotype_masks}}

\item{phewas_output}{Path to the saved PheWAS output dataframe or an R dataframe object containing the output of \link{run_pmbb_phewas}}

\item{report_output_path}{(Optional) File name and path were the report should be saved. If not provided the report will be saved to the current directory}

\item{...}{Additional arguments passed to \code{\link[PheWAS:phewas]{PheWAS::phewas()}}}
}
\value{
A named list containing the paths to the output files
}
\description{
This function is a wrapper around the \code{run_pmbb_phewas} function that additionally generates an HTML report of the results.
}
\examples{
\dontrun{
run_pmbb_phewas_report(
  gene = "CFTR",
  annotation_file = "/project/PMBB/PMBB-Release-2020-2.0/Exome/Variant_annotations/PMBB-Release-2020-2.0_genetic_exome_variant-annotation-counts.txt",
  gene_col = "Gene.refGene",
  masks = list(
    plof_lt_0.001 = list(ExonicFunc.ensGene = "\%in\% c('stopgain', 'stoploss', 'frameshift substitution')", gnomAD_exome_ALL = "< 0.001"),
    p_lp_het_gt_10 = list(CLNSIG = "\%in\% c('Pathogenic', 'Pathogenic/Likely_pathogenic')", HET_REF_ALT_CTS = "> 10")
  ),
  mask_operator = list(
    plof_lt_0.001 = "burden",
    p_lp_het_gt_10 = "single"
  ),
  variant_id_col = ID,
  effect_allele_col = Alt,
  covariate_population_col = "Class",
  covariate_cols = c(Age = Age_at_Enrollment, Sex = Gen_Sex, dplyr::starts_with("Genotype_PC")),
  mask_output = "cftr_mask_results.rds", # Optional: Specify the output path for the mask results file
  phewas_output = "cftr_phewas_results.rds", # Optional: Specify the output path for the PheWAS results file,
  phenotypes = "/project/PMBB/PMBB-Release-2020-2.0/Phenotype/2.3/PMBB-Release-2020-2.3_phenotype_PheCode-matrix.txt",
  covariates = c("/project/PMBB/PMBB-Release-2020-2.0/Phenotype/2.3/PMBB-Release-2020-2.3_covariates.txt", "/project/PMBB/PMBB-Release-2020-2.0/Phenotype/2.1/PMBB-Release-2020-2.1_phenotype_covariates.txt"),
  bfile = "/project/PMBB/PMBB-Release-2020-2.0/Exome/pVCF/all_variants/PMBB-Release-2020-2.0_genetic_exome_GL",
  plink_bin = "/project/voltron/Applications/PLINK/plink2_linux_avx2_20230607/plink2",
  cores = 16
)

}
}
