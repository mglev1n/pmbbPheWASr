---
title: "PMBB-PheWAS {{< meta params.gene_names >}}"
author: 
  - name: Michael Levin, MD
    orcid: 0000-0002-9937-9932
date: last-modified
format:
  html:
    grid:
      body-width: 1200px
    code-tools: true
    toc: true
    toc-depth: 6
    cap-location: top
    embed-resources: true
    citations-hover: true
fig-height: 4
fig-format: retina
execute:
  warning: false
  message: false
  echo: false
csl: https://raw.githubusercontent.com/citation-style-language/styles/6152ccea8b7d7a472910d36524d1bf3557a83bfc/dependent/nature-genetics.csl

params:
  gene_names: NULL
  mask_results: NULL
  phewas_results: NULL
  function_call: NULL

---

```{r}
params$phewas_results
params$mask_results
```


```{r}
library(tidyverse)
library(pmbbPheWASr)
library(rlang)
library(PheWAS)
library(DT)
library(htmltools)
library(reactable)

theme_set(theme_bw(base_size = 16))
```

```{r include=FALSE}
# Init step to ensure that JS dependencies are included in the HTML doc
reactable(mtcars)
```

```{r}
render_reactable <- function(df, ...) {
  df %>%
    reactable(filterable = TRUE, searchable = TRUE, ...)
}

render_phecode_reactable <- function(phewas_res_df, ...) {
  phewas_res_df %>%
    select(-adjustment, -snp) %>%
    PheWAS::addPhecodeInfo() %>%
    select(phenotype, description, everything()) %>%
    mutate(across(where(is.numeric), ~ signif(., 3))) %>%
    reactable(
      filterable = TRUE,
      searchable = TRUE,
      columns = list(p = colDef(cell = function(value) {
        # gt::vec_fmt_scientific(as.numeric(value))
        format(signif(value, 3))
        # # Render as currency
        # paste0("$", format(value * 1000, big.mark = ","))
      })),
      ...
    ) %>%
    shiny::tagList() %>%
    print()
}

plot_phewas_manhattan <- function(phewas_res_df, ...) {
  phewas_res_df %>%
  PheWAS::phewasManhattan(
    OR.direction = TRUE,
    OR.size = TRUE,
    sort.by.category.value = TRUE,
    # suggestive.line = FALSE,
    annotate.phenotype.description = TRUE,
    title = NULL,
    x.axis.label = NULL,
    color.palette = viridis::viridis_pal(option = "magma")(20),
    ...
  ) +
  scale_shape_manual(values = c(25, 24),
                     labels = c("Decrease", "Increase"),
                     name = "Effect direction"
                     )
}

```

```{r}
phewas_res <- readRDS(params$phewas_results)

phewas_res_nested <- phewas_res %>%
  group_nest(mask_name)
  
```

<!-- ::: panel-tabset -->

## Genotype Masks

```{r, results = 'asis'}
#| output: asis
#| results: asis
#| fig-height: 6
#| fig-width: 12

### PheWAS results
purrr::pwalk(phewas_res_nested, \(mask_name, data) {
  
  cat(paste0("\n### ", mask_name, "\n\n"))
  dataset <- data %>%
    group_nest(population)
  cat("\n::: panel-tabset\n")
  purrr::pwalk(dataset, \(population, data) {
    
    cat(paste0("\n#### ", population, "\n\n"))
    
    data %>%
      plot_phewas_manhattan() %>%
      print()
    
    htmltools::tags$br() %>% print()

    
    data %>%
      filter(!is.na(p)) %>%
      arrange(p) %>%
      render_phecode_reactable()
    
    htmltools::tags$br() %>% print()

  })
  cat("\n:::\n")
})

```

```{r}
# phewas_res %>%
#   crossing(population2 = c("ALL", "EUR", "AFR")) %>%
#   mutate(population = population2) %>%
#   select(-population2) %>%
#   crossing(mask2 = c("plof_0.001", "common")) %>%
#   mutate(mask_name = mask2) %>%
#   select(-mask2) %>%
#   write_tsv("../../tests/testthat/phewas_res_ldlr_expanded.tsv")
```

